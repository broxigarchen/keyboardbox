#MIT License

#Copyright (c) 2020 Brox Chen broxigarchen@gmail.com 

#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.


#Define your key combos with format "ComboName = key1 + key 2 +...". Each combo takes a new line.
#An callback entry will be created with the "ComboName"(case sensitive). Use this name to link your callback function in the key actor class. This name has to be unique among all combonames. 

#key Combination(with order)
keyComboWithOrder = {
ActivePCSet1 = OS + F1
ActivePCSet2 = OS + F2
ActivePCSet3 = OS + F3 
}

#Reserved key combos. Reserved key combos invoke keyboardbox's own callback functions 
#Customized callback are also allowed with these reserved key combos. 
#Invoke order: customized callback -> system callback 
keyComboReserved = {
	#keyboardbox actor enable/disable toggle. 
	#When keyboardActor is disabled, the logger and emulator will keep working, but all other actors will not be invoked.
	#recommoneded to add a customized callback, i.e. a led on your device to show the status of the keyboardbox
	keyboardActorSwitch = OS + ESC
}

